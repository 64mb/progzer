name: Auto Tag

on:
  push:
    branches:
      - main

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag -l "v*" | sort -V | tail -n 1)
          if [ -z "$LATEST_TAG" ]; then
            echo "No existing tags found, starting with v0.1.0"
            echo "latest_tag=v0.1.0" >> $GITHUB_OUTPUT
          else
            echo "Latest tag: $LATEST_TAG"
            echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          fi

      - name: Bump version
        id: bump_version
        run: |
          LATEST_TAG=${{ steps.get_latest_tag.outputs.latest_tag }}
          # Remove 'v' prefix
          VERSION=${LATEST_TAG#v}
          # Split into major, minor, patch
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          # Increment patch version
          PATCH=$((PATCH + 1))

          # Create new version
          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create tag
        run: |
          NEW_VERSION=${{ steps.bump_version.outputs.new_version }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a $NEW_VERSION -m "Auto-generated tag $NEW_VERSION"
          git push origin $NEW_VERSION
